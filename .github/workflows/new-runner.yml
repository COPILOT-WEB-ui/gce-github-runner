name: "Ephemeral GCE GitHub self-hosted runner"

on:
  workflow_call:
    inputs:
      runner_token:
        description: >-
          GitHub auth token, needs `repo`/`public_repo` scope: https://docs.github.com/en/rest/reference/actions#self-hosted-runners.
        required: true
        type: string
      project_id:
        description: >-
          ID of the Google Cloud Platform project. If provided, this will configure gcloud to use this project ID.
        required: false
        default: public-github-runners
        type: string
      machine_zone:
        description: GCE zone
        default: "europe-west1-b"
        required: false
        type: string
      machine_type:
        description: GCE machine type; https://cloud.google.com/compute/docs/machine-types
        default: "n2d-standard-8"
        required: true
        type: string
      disk_size:
        description: VM disk size.
        required: false
        default: 250GB
        type: string
      image_project:
        description: >
          The Google Cloud project against which all image and image family references will be resolved.
        required: false
        default: public-github-runners
        type: string
      image:
        description: Specifies the name of the image that the disk will be initialized with.
        required: false
        default: gh-runner-202307281245
        type: string
      image_family:
        description: The image family for the operating system that the boot disk will be initialized with.
        required: false
        type: string
      scopes:
        description: Scopes granted to the VM, defaults to full access (cloud-platform).
        default: cloud-platform
        required: true
        type: string
      shutdown_timeout:
        description: "Shutdown grace period (in seconds)."
        default: 30
        required: true
        type: string
      task:
        description: Additional context about the workflow
        default: default
        required: true
        type: string
      gcp_credentials:
        description: GCP JSON credentials
        required: true
        type: string

    outputs:
      label:
        description: >-
          Unique runner label. This label can be used to request a specific
          runner for the workflow job.
        value: ${{ steps.gce-github-runner-script.outputs.label }}
      machine-zone:
        description: >-
          VM availability zone
        value: ${{ steps.gce-github-runner-script.outputs.machine-zone }}

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - id: check-repository
        if: github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
        shell: bash
        run: |
          echo "❌ Job actions are not allowed to run in forks" >> $GITHUB_STEP_SUMMARY
          exit 1
      - uses: actions/checkout@v3
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ inputs.gcp_credentials }}
      - id: gcloud-auth
        name: gcloud auth activate-service-account
        shell: bash
        run: |
          gcloud auth activate-service-account --key-file ${{ steps.auth.outputs.credentials_file_path }}
      - id: gce-github-runner-script
        if: github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name
        uses: pyTooling/Actions/with-post-step@r0
        with:
          main: |
            ${{ github.action_path }}/action.sh
            --command=start
            --runner_token=${{ inputs.runner_token }}
            --project_id=${{ inputs.project_id }}
            --machine_zone=${{ inputs.machine_zone }}
            --machine_type=${{ inputs.machine_type }}
            --disk_size=${{ inputs.disk_size }}
            --scopes=${{ inputs.scopes }}
            --shutdown_timeout=${{ inputs.shutdown_timeout }}
            --image_project=${{ inputs.image_project }}
            --image=${{ inputs.image }}
            --image_family=${{ inputs.image_family }}
            --boot_disk_type=pd-ssd
            --task=${{ inputs.task }}
          post: |
            echo "Removing GCE VM..."

            gcloud auth activate-service-account --key-file ${{ steps.auth.outputs.credentials_file_path }}
            if [ -z "$(gcloud compute instances list | grep "${{ inputs.runner-label }}")" ]; then
              # vm is gone
              exit 0
            fi

            gcloud compute instances delete ${{ inputs.runner-label }} --quiet --zone ${{ inputs.machine-zone }}
